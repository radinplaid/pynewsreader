# AUTOGENERATED! DO NOT EDIT! File to edit: ../01_cli.ipynb.

# %% auto 0
__all__ = ['logger', 'show_entries', 'update', 'search', 'main']

# %% ../01_cli.ipynb 3
import reader
from typing import *
from bs4 import BeautifulSoup
from rich import print
from rich.panel import Panel
from rich.text import Text
import logging
import fire

logger = logging.getLogger(__name__)

# %% ../01_cli.ipynb 4
from .core import PyNewsReader

# %% ../01_cli.ipynb 5
def show_entries(dbpath = None, limit: int = 5, read: bool = False, important: bool = None, mark_as_read: bool = True):
    """Pretty print most recent entries"""
    if dbpath is None:
        dbpath = "./db.sqlite"
    nr = PyNewsReader(dbpath=dbpath)
    nr.list(limit, read, important, mark_as_read)

# %% ../01_cli.ipynb 6
def update(dbpath = None, limit: int = 5, read: bool = None, important: bool = None, mark_as_read: bool = False):
    """Update feeds"""
    if dbpath is None:
        dbpath = "./db.sqlite"
    nr = PyNewsReader(dbpath=dbpath)
    nr.update()

# %% ../01_cli.ipynb 7
def search(query:str = None, dbpath = None, limit: int = 5,  mark_as_read: bool = True):
    """Search feeds"""
    assert query is not None, "Must supply a query to search"
    if dbpath is None:
        dbpath = "./db.sqlite"
    nr = PyNewsReader(dbpath=dbpath)
    nr.search(query)

# %% ../01_cli.ipynb 8
def main():
    fire.Fire({
        'list': show_entries,
        'update': update,
        'search': search
    })
